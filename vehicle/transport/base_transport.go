// Code generated by proto-gen-go-kit-transport. DO NOT EDIT.
// * Source: "github.com/aksanart/vehicle/contract/contract/grpc.proto"

package transport

import (
	"context"

	"github.com/aksanart/vehicle/contract"
)

type UseCaseContract interface {
	HealthCheck(ctx context.Context, request *contract.EmptyRequest) (response *contract.DefaultResponse, err error)             // (unary)
	CreateVehicle(ctx context.Context, request *contract.CreateVehicleReq) (response *contract.CreateVehicleResponse, err error) // (unary)
	UpdateVehicle(ctx context.Context, request *contract.UpdateVehicleReq) (response *contract.DefaultResponse, err error)       // (unary)
	ListVehicle(ctx context.Context, request *contract.ListVehicleReq) (response *contract.ListVehicleResponse, err error)       // (unary)
	DetailVehicle(ctx context.Context, request *contract.IDVehicleReq) (response *contract.DetailVehicleResponse, err error)     // (unary)
	DeleteVehicle(ctx context.Context, request *contract.IDVehicleReq) (response *contract.DefaultResponse, err error)           // (unary)
}

type transport struct {
	contract.UnimplementedVehicleServiceServer
	UseCase UseCaseContract
}

func NewTransport(ctx context.Context, useCase UseCaseContract) *transport {
	return &transport{
		UseCase: useCase,
	}
}
